.. _flairproc:

.. title:: FLAIR

Fluid attenuated inversion recovery
============================================================

This module performs bias field correction, rescaling, and normalizaiton of T2/FLAIR images. The image is then registered to nativepro, then mapped to fsnative, fs-LR, and fsaverage5 surfaces.

Normalization of intensities by white and gray matter interface uses `5ttgen <https://github.com/MRtrix3/mrtrix3/blob/master/bin/5ttgen>`_, available via GitHub.

.. figure:: ./03_sankey_proc_flair.png
   :align: center

-proc_flair
--------------------------------------------------------

.. admonition:: Prerequisites üñêüèº

    You need to run ``-proc_structural``, ``-proc_freesurfer`` and ``-post_structural`` before this stage

.. tabs::

    .. tab:: Processing steps

        - Apply N4 bias correction
        - Intensities are truncated (clamped) to values between 1st and 99th percentiles
        - Intensities are rescaled to values between 0 and 100
        - Normalize image intensities by average intensity at WM/GM interface
        - Affine registration of FLAIR image to T1w nativepro using each scan (default) or label-based affine registration (synthseg)
        - Map FLAIR image to fsnative surface

    .. tab:: Usage

        **Terminal:**

        .. parsed-literal::
            $ micapipe **-bids** <BIDS-directory> **-sub** <subject_id> **-out** <outputDirectory> **-proc_flair** <options>

        **Docker command:**

        .. parsed-literal::
            $ docker -proc_flair

        **Optional arguments:**
        ``-proc_flair`` has two optional arguments;

        .. list-table::
            :widths: 75 750
            :header-rows: 1
            :class: tight-table

            * - **Optional argument**
              - **Description**
            * - ``-flairScanStr`` ``<path>`` 
              - String to manually identify the T2/FLAIR scan for processing (eg. anat/sub-001_<flairScanStr>.nii[.gz]) Default='FLAIR'
            * - ``-regSynth`` 
              - Specify this option to perform the registration based on synthseg.
        


    .. tab:: Outputs

        Directories created or populated by **-proc_flair**:

        .. parsed-literal::

            - <outputDirectory>/micapipe/<sub>/maps
            - <outputDirectory>/micapipe/<sub>/xfm

        Files generated by **-proc_flair**:

        .. parsed-literal::

            - Registration ouputs stored in *<outputDirectory>/micapipe/<sub>/maps*:

                - <sub>_<hemi>_surf-fsaverage5_label-midthickness_flair.func.gii
                - <sub>_<hemi>_surf-fsaverage5_label-white_flair.func.gii
                - <sub>_<hemi>_surf-fsLR-32k_label-midthickness_flair.func.gii
                - <sub>_<hemi>_surf-fsLR-32k_label-white_flair.func.gii
                - <sub>_<hemi>_surf-fsLR-5k_label-midthickness_flair.func.gii
                - <sub>_<hemi>_surf-fsLR-5k_label-white_flair.func.gii
                - <sub>_<hemi>_surf-fsnative_label-midthickness_flair.func.gii
                - <sub>_<hemi>_surf-fsnative_label-white_flair.func.gii
                - <sub>_space-nativepro_map-flair.json
                - <sub>_space-nativepro_map-flair.nii.gz

            - Output stored in *<outputDirectory>/micapipe/<sub>/xfm*

                - <sub>_from-flair_to-nativepro_mode-image_desc-affine_0GenericAffine.mat


