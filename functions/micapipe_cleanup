#!/bin/bash
#
# MICA pipe cleanup script
#
# Will erase any temporal directory by default
# If a flag is defined it will erase output files and logs from an specific step
#
# https://github.com/MICA-MNI/micaopen/templates
#
#   ARGUMENTS order:
#   $1 : BIDS directory
#   $2 : participant
#   $3 : Out parcDirectory
#

#---------------- FUNCTION: HELP ----------------#
help() {
echo -e "
\033[38;5;141mCOMMAND:\033[0m
   $(basename $0)

\033[38;5;141mARGUMENTS:\033[0m
\t\033[38;5;197m-sub\033[0m 	         : Subject identification (no 'sub-')
\t\033[38;5;197m-out\033[0m 	         : Output directory for the processed files <derivatives>.
\t\033[38;5;197m-bids\033[0m 	         : Path to BIDS directory
\t\033[38;5;120m-ses\033[0m 	         : OPTIONAL flag that indicates the session name (if omitted will manage as SINGLE session)

   Flags for erasing specific processing outputs:\n
\t\033[38;5;197m-proc_structural\033[0m  : DELETES volumetric processing
\t\033[38;5;197m-proc_surf\033[0m        : DELETES Surface processing
\t  \033[38;5;120m-freesurfer\033[0m        Use this to delete freesurfer processing
\t\033[38;5;197m-proc_flair\033[0m       : DELETES FLAIR processing
\t\033[38;5;197m-proc_dwi\033[0m         : DELETES DWI-Diffusion weighted images processing with MRtrix3
\t  \033[38;5;120m-acqStr\033[0m            Use this option if -proc_dwi was used with -dwi_acq
\t\033[38;5;197m-proc_func\033[0m        : DELETES Funtional MRI processing
\t  \033[38;5;120m-acqStr\033[0m           -proc_fun requires the acquisition string to erase its outputs
\t\t\t     e.g -acqStr desc-se_task-rest_acq-AP_bold
\t\033[38;5;197m-post_structural\033[0m  : DELETES Post structural volumetric processing
\t\033[38;5;197m-SC\033[0m               : DELETES Post tractography and connectome generation
\t  \033[38;5;120m-acqStr\033[0m         : Use this option if -SC was used with -dwi_acq
\t\033[38;5;197m-MPC\033[0m              : DELETES Microstructural profiles and covariance analysis
\t  \033[38;5;120m-acqStr\033[0m           -MPC requires the acquisition string to erase its outputs
\t\t\t     e.g -acqStr T1map


\033[38;5;141mUSAGE:\033[0m
$(basename $0)\033[0m  \033[38;5;197m-sub\033[0m <subject_id> \033[38;5;120m-ses\033[0m <session> \033[38;5;197m-out\033[0m <outputDirectory> \033[38;5;197m-bids\033[0m <BIDS-directory>

McGill University, MNI, MICA-lab
https://github.com/MICA-MNI/micapipe
http://mica-mni.github.io/
"
}

# source print funtions for MICAPIPE
MICAPIPE=$(dirname $(dirname $(realpath "$0")))
source "${MICAPIPE}/functions/utilities.sh"
umask 003

# -----------------------------------------------------------------------------------------------#
#			ARGUMENTS
# Create VARIABLES
for arg in "$@"
do
  case "$arg" in
  -h|-help)
    help
    exit 1
  ;;
  -sub)
    id=$2
    shift;shift
  ;;
  -out)
    out=$2
    shift;shift
  ;;
  -bids)
    BIDS=$2
    shift;shift
  ;;
  -ses)
    SES=$2
    shift;shift
  ;;
  -proc_structural)
    procVOL=TRUE
    shift
  ;;
  -proc_surf)
    procFS=TRUE
    shift
  ;;
  -proc_dwi)
    procDWI=TRUE
    shift
  ;;
  -proc_func)
    procFunc=TRUE
    shift
  ;;
  -proc_flair)
    procFlair=TRUE
    shift
  ;;
  -post_structural)
    postVOL=TRUE
    shift
  ;;
  -SC)
    postDWI=TRUE
    shift
  ;;
  -tracts)
    tracts=$2
    shift;shift
  ;;
  -MPC)
    postMPC=TRUE
    shift
  ;;
  -GD)
    postGD=TRUE
    shift
  ;;
  -Morphology)
    postMorph=TRUE
    shift
  ;;
  -acqStr)
    acqStr=$2
    shift;shift
  ;;
  -freesurfer)
    FreeSurfer=TRUE
    shift
  ;;
  -mica)
    mica=TRUE
    shift
  ;;
  -*)
    Error "Unknown option ${2}"
    help
    exit 1
  ;;
    esac
done

# argument check out & WARNINGS
missing_arg

# Get the real path of the Inputs
inputs_realpath

# Number of session (Default is "ses-pre")
if [ -z "${SES}" ]; then SES="SINGLE"; else SES="ses-${SES/ses-/}"; fi

# Exit if subject is not found
if [ ! -d "${out}/sub-${id}" ]; then Error "$id was not found on the OUTPUT directory\n\t Check ls ${out}/sub-${id}"; exit 1; fi

# Assigns variables names
bids_variables "$BIDS" "$id" "$out" "$SES"

# if temporary directory is running on MICA-lab SGE
if [ "$mica" = "TRUE" ];then source "$MICAPIPE"/functions/init.sh; fi

# if temporary directory is empty
if [ -z "$tmp" ]; then tmp=/tmp; fi

# Optional arguments SC
if [ -z "$tracts" ]; then tracts=40M; else tracts="$tracts"; fi

# ---------------------------------------------------------------------------------------
Title "MICA pipe cleanup
\tSubject: $id
\tSession: $SES"
# ---------------------------------------------------------------------------------------
# CLEAN -proc_structural
if [ "$procVOL" = "TRUE" ]; then
    Warning "Erasing proc_structural output files and logs\n IF you re-run this step we highly recomend to re-run all post steps"
    Do_cmd rm -rf "$proc_struct"/first \
                  "$proc_struct"/*_space-nativepro_T1w* \
                  "$dir_warp"/*-nativepro_brain_to-MNI152_* \
                  "$dir_warp"/*_transformations-proc_structural.json \
                  "$dir_logs"/proc_structural_* \
                  "$dir_QC"/*module-proc_structural* \
                  "${proc_struct}/"*_space-nativepro_T1w.json \
                  "${dir_warp}/${idBIDS}_transformations-proc_structural.json" \
                  "$dir_volum"/*T1w_atlas-cerebellum.nii.gz \
                  "$dir_volum"/*T1w_atlas-subcortical.nii.gz
    grep -v "${id}, ${SES/ses-/}, proc_structural" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id},${SES/ses-/},proc_structural" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi
# ---------------------------------------------------------------------------------------
# CLEAN -proc_surf
if [ "$procFS" = "TRUE" ]; then
    Nrecon=($(ls "${dir_QC}/${idBIDS}_module-proc_surf-"*.json 2>/dev/null | wc -l))
    if [[ "$Nrecon" -lt 1 ]]; then
      Error "Subject $id doesn't have a module-proc_surf: run -proc_surf"; exit 1
    elif [[ "$Nrecon" -eq 1 ]]; then
      module_qc=$(ls "${dir_QC}/${idBIDS}_module-proc_surf-"*.json 2>/dev/null)
      recon="$(echo ${module_qc/.json/} | awk -F 'proc_surf-' '{print $2}')"
    elif [[ "$Nrecon" -gt 1 ]]; then
      Warning "${idBIDS} has been processed with freesurfer and fastsurfer."
      if [[ "$FreeSurfer" == "TRUE" ]]; then
        Note "freesurfer will run: $FreeSurfer\n"; recon="freesurfer";
      else
        Note "fastsurfer is the default"; recon="fastsurfer"
      fi
    fi
    # Set surface directory
    set_surface_directory "${recon}"
    Warning "Erasing proc_surf output files and logs\n IF you re-run this step we highly recomend to re-run all post steps"
    # if the directory is a symbolic link then unlink it
    if [[ -L "$dir_subjsurf" ]]; then
      Info "Surface directory is symlink"; Do_cmd unlink "$dir_subjsurf"
    else
      Warning "RUN manually: rm -rf $dir_subjsurf"
    fi
    Do_cmd rm -rf "${dir_QC}/${idBIDS}_module-proc_surf-${recon}*" \
                  "${dir_conte69}/${idBIDS}_proc_surf-${recon}.json" \
                  "$dir_logs"/proc_surf*
    grep -v "${id}, ${SES/ses-/}, proc_surf-${recon}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id},${SES/ses-/},proc_surf-${recon}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

# ---------------------------------------------------------------------------------------
# CLEAN -post_structural
if [ "$postVOL" = "TRUE" ]; then
    Warning "Erasing post_structural output files and logs"
    parcellations=($(find "${dir_volum}" -name "*.nii.gz" ! -name "*cerebellum*" ! -name "*subcortical*"))
    for parc in "${parcellations[@]}"; do Do_cmd rm -rf $parc; done
    Do_cmd rm -rf "${proc_struct}/${idBIDS}"_space-fsnative_T1w.nii.gz \
                  "${dir_warp}/${idBIDS}"_from-fsnative_to_nativepro_T1w_* \
                  "${dir_conte69}"/* \
                  "${dir_subjsurf}"/label/*_mics* \
                  "${dir_subjsurf}"/surf/*.midthickness.surf.gii \
                  "${dir_QC}/${idBIDS}"_module-post_structural* \
                  "${proc_struct}/${idBIDS}"_post_structural.json \
                  "${subject_dir}/anat/surf/morphology" \
                  "$dir_logs"/post_structural_*
    grep -v "${id}, ${SES/ses-/}, post_structural" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id},${SES/ses-/},post_structural" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

# ---------------------------------------------------------------------------------------
# CLEAN -proc_flair
if [ "$procFlair" = "TRUE" ]; then
    Warning "Erasing proc_flair output files and logs"
    outDir="${subject_dir}/maps"
    Do_cmd rm -rf "${dir_conte69}/${idBIDS}"_space-nativepro_map-flair.nii.gz \
        "${dir_conte69}/${idBIDS}"_space-nativepro_map-flair.json \
        "${dir_QC}/${idBIDS}"_module-proc_flair.json \
        "${outDir}/${idBIDS}_space-nativepro_map-flair.json" \
        "${outDir}/${idBIDS}_space-nativepro_map-flair.nii.gz" \
        "${dir_maps}/${idBIDS}_hemi-*_flair.func.gii"
    grep -v "${id},${SES/ses-/},proc_flair" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id}, ${SES/ses-/}, proc_flair" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

# ---------------------------------------------------------------------------------------
# CLEAN -proc_func
if [ "$procFunc" = "TRUE" ]; then
    if [ -z ${acqStr} ]; then Warning "proc_func requires an acquisition string (-acqStr), select one from:"; ls ${proc_func}; exit; fi
    if [ ! -d ${proc_func}/${acqStr} ]; then Warning "The selected acquisition does not exist, select one from:"; ls ${proc_func}; exit; fi
    Warning "Erasing proc_func output files and logs: ${acqStr}"
    acqStr=${acqStr/desc-/}
    Do_cmd rm -rf "${proc_func}"/desc-*"${acqStr}" \
                  "${dir_warp}/${idBIDS}_from-nativepro_func_to-${acqStr}_mode-image_desc-SyN_"* \
                  "${dir_warp}/${idBIDS}_from-${acqStr}_to-nativepro_mode-image_desc-affine_"* \
                  "${dir_warp}/${idBIDS}_from-${acqStr}_to-fsnative_bbr"* \
                  "$proc_struct"/${idBIDS}_space-nativepro_desc-T1wbold.nii.gz \
                  "${dir_QC}/${idBIDS}"_module-proc_func-desc-*"${acqStr}"* \
                  "${dir_warp}/${idBIDS}_transformations-proc_func.json" \
                  "${func_volum}/${idBIDS}${acqStr}_clean*.json" \
                  "$dir_logs"/proc_func_*${acqStr}*
    grep -v "${id}, ${SES/ses-/}, proc_func_${acqStr}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id},${SES/ses-/},proc_func_${acqStr}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

# ---------------------------------------------------------------------------------------
# CLEAN -proc_dwi
if [ "$procDWI" = "TRUE" ]; then
    Warning "Erasing proc_dwi output files and ALL logs"
    if [ -z ${acqStr} ]; then
    dwifiles=($(find "${proc_dwi}" -name "*_space-dwi_desc-*" ! -name "*iFOD2*"))
    Do_cmd rm -rf "$proc_dwi"/eddy/ \
                  "$proc_dwi"/connectomes/ \
                  "${dwifiles[*]}" \
                  "${proc_dwi}/${idBIDS}"_space-dwi_model-* \
                  "${dir_warp}"/*_space-dwi_from-dwi_to-nativepro_mode-image_desc-* \
                  "${dir_warp}"/*space-dwi_from-dwi_to-dwi_mode-image_desc-SyN_* \
                  "${dir_warp}/${idBIDS}_transformations-proc_dwi.json" \
                  "${dir_QC}/${idBIDS}_module-proc_dwi"* \
                  "${dir_logs}"/proc_dwi_*
    grep -v "${id}, ${SES/ses-/}, proc_dwi" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id},${SES/ses-/},proc_dwi" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    else
      proc_dwi_acq=${proc_dwi}/${acqStr}
      if [ ! -d ${proc_dwi_acq} ]; then Warning "The selected acquisition does not exist, select one from:"; ls ${proc_dwi}; exit; fi
      Do_cmd rm -rf "$proc_dwi_acq" \
                  "${dir_warp}"/*_space-dwi_from-dwi_${acqStr}_to-nativepro_mode-image_desc-affine_* \
                  "${dir_warp}"/*_space-dwi_${acqStr}_from-dwi_to-dwi_mode-image_desc-SyN_* \
                  "${dir_warp}/${idBIDS}_transformations-proc_dwi_${acqStr}.json" \
                  "${dir_QC}/${idBIDS}_module-proc_dwi_${acqStr}"* \
                  "${dir_logs}"/proc_dwi_${acqStr}*
      grep -v "${id}, ${SES/ses-/}, proc_dwi_${acqStr}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
      grep -v "${id},${SES/ses-/},proc_dwi_${acqStr}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    fi
fi
# ---------------------------------------------------------------------------------------
# CLEAN -SC TRACTOGRAPHY
if [ "$postDWI" = "TRUE" ]; then
    filter=SIFT2
    Warning "Erasing post_tractography output files and logs"
    if [ -z ${acqStr} ]; then
      proc_dwi=$subject_dir/dwi; acqStr=""; acqStr_=""
    else
      if [ ! -d ${proc_dwi} ]; then Warning "The selected acquisition does not exist, select one from:"; ls ${proc_dwi}; exit; fi
      proc_dwi=$subject_dir/dwi/"${acqStr}"; acqStr_="_${acqStr}"
    fi
    Do_cmd rm -rf "$proc_dwi"/connectomes/"$idBIDS"_space-dwi_atlas-*_desc-iFOD2-"$tracts"-"${filter}"_*.shape.gii \
                  "$proc_dwi"/connectomes/"$idBIDS"_surf-fsLR-5k_desc-iFOD2-"$tracts"-"${filter}"_*.shape.gii \
                  "$proc_dwi"/"$idBIDS"_space-dwi_desc-iFOD2-"$tracts"_* \
                  "${dir_QC}/${idBIDS}_module-SC-${tracts}${acqStr}"* \
                  "$proc_dwi"/"$idBIDS"_space-dwi_"$tracts"* "$dir_logs"/SC-${tracts}*
    grep -v "${id}, ${SES/ses-/}, SC-${tracts}${acqStr}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id},${SES/ses-/},SC-${tracts}${acqStr}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi
# ---------------------------------------------------------------------------------------
# CLEAN -MPC
if [ "${postMPC}" = "TRUE" ]; then
    if [ -z ${acqStr} ]; then acqStr="qMRI"; else acqStr=${acqStr/acq-/}; fi
    dir_mpc="${subject_dir}/mpc/acq-${acqStr}"
    #if [ ! -d "${dir_mpc}" ]; then Warning "MPC acquisition not found (-acqStr), select one from:"; $(ls -d "${subject_dir}/mpc/"*/ | awk -F '/' '{print $(NF-1)}'); exit; fi
        Warning "Erasing MPC output files and logs: ${acqStr}"
        Warning "${id},${SES/ses-/},MPC-${acqStr}"
        acqStr=${acqStr/acq-/}
        Do_cmd rm -rvf "${dir_mpc}" \
                      ${proc_struct}/${idBIDS}_space-fsnative_${acqStr}.nii.gz \
                      "${dir_warp}/${idBIDS}"_from-${acqStr}_to-fsnative* \
                      "${dir_warp}/${idBIDS}_from-${acqStr}_to-nativepro_mode-image_desc-affine_"* \
                      "${subject_dir}/anat/${idBIDS}_space-fsnative_desc-${acqStr}.nii.gz" \
                      "${dir_QC}/${idBIDS}_module-MPC-${acqStr}"* \
                      "$dir_logs"/MPC_*"${acqStr}"* \
                      "${dir_maps}/"${idBIDS}*${acqStr}*gii \
                      "${dir_maps}/"${idBIDS}_space-nativepro_map-${acqStr}*
        grep -v "${id},${SES/ses-/},MPC-${acqStr}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
        grep -v "${id}, ${SES/ses-/}, MPC-${acqStr}" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

# ---------------------------------------------------------------------------------------
# CLEAN -GD
if [ "$postGD" = "TRUE" ]; then
    Warning "Erasing '-GD' output files and logs"
    Do_cmd rm -rf "${subject_dir}/dist" \
              "${dir_QC}/${idBIDS}_module-GD"* \
              "$dir_logs"/GD_*
    grep -v "${id},${SES/ses-/},GD" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id}, ${SES/ses-/}, GD" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

bids_variables_unset
