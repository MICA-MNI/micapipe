#!/bin/bash
#
# MICA pipe cleanup script
#
# Will erase any temporal directory by default
# If a flag is defined it will erase output files and logs from an specific step
#
# https://github.com/MICA-MNI/micaopen/templates
#
#   ARGUMENTS order:
#   $1 : BIDS directory
#   $2 : participant
#   $3 : Out parcDirectory
#

#---------------- FUNCTION: HELP ----------------#
help() {
echo -e "
\033[38;5;141mCOMMAND:\033[0m
   $(basename $0)

\033[38;5;141mARGUMENTS:\033[0m
\t\033[38;5;197m-sub\033[0m 	         : Subject identification (no 'sub-')
\t\033[38;5;197m-out\033[0m 	         : Output directory for the processed files <derivatives>.
\t\033[38;5;197m-bids\033[0m 	         : Path to BIDS directory
\t\033[38;5;120m-ses\033[0m 	         : OPTIONAL flag that indicates the session name (if omitted will manage as SINGLE session)

   Flags for erasing specific processing outputs:\n
\t\033[38;5;197m-proc_structural\033[0m  : DELETES volumetric processing
\t\033[38;5;197m-proc_freesurfer\033[0m  : DELETES Freesurfer recon-all processing
\t\033[38;5;197m-proc_dwi\033[0m         : DELETES DWI-Diffusion weighted images processing with MRtrix3
\t\033[38;5;197m-proc_func\033[0m      : DELETES Funtional MRI processing
\t\033[38;5;197m-post_structural\033[0m  : DELETES Post structural volumetric processing
\t\033[38;5;197m-SC\033[0m               : DELETES Post tractography and connectome generation
\t\033[38;5;197m-MPC\033[0m              : DELETES Microstructural profiles and covariance analysis

\033[38;5;141mUSAGE:\033[0m
$(basename $0)\033[0m  \033[38;5;197m-sub\033[0m <subject_id> \033[38;5;120m-ses\033[0m <session> \033[38;5;197m-out\033[0m <outputDirectory> \033[38;5;197m-bids\033[0m <BIDS-directory>

McGill University, MNI, MICA-lab, May-September 2020
https://github.com/MICA-MNI/micapipe
http://mica-mni.github.io/
"
}

# source print funtions for MICAPIPE
MICAPIPE=$(dirname $(dirname $(realpath "$0")))
source "${MICAPIPE}/functions/utilities.sh"
umask 003

# -----------------------------------------------------------------------------------------------#
#			ARGUMENTS
# Create VARIABLES
for arg in "$@"
do
  case "$arg" in
  -h|-help)
    help
    exit 1
  ;;
  -sub)
    id=$2
    shift;shift
  ;;
  -out)
    out=$2
    shift;shift
  ;;
  -bids)
    BIDS=$2
    shift;shift
  ;;
  -ses)
    SES=$2
    shift;shift
  ;;
  -proc_structural)
    procVOL=TRUE
    shift
  ;;
  -proc_freesurfer)
    procFS=TRUE
    shift
  ;;
  -proc_dwi)
    procDWI=TRUE
    shift
  ;;
  -proc_func)
    procfMRI=TRUE
    shift
  ;;
  -post_structural)
    postVOL=TRUE
    shift
  ;;
  -SC)
    postDWI=TRUE
    shift
  ;;
  -tracts)
    tracts=$2
    shift;shift
  ;;
  -MPC)
    postMPC=TRUE
    shift
  ;;
  -GD)
    postGD=TRUE
    shift
  ;;
  -Morphology)
    postMorph=TRUE
    shift
  ;;
  -mica)
    mica=TRUE
    shift
  ;;
  -*)
    Error "Unknown option ${2}"
    help
    exit 1
  ;;
    esac
done

# argument check out & WARNINGS
missing_arg

# Get the real path of the Inputs
inputs_realpath

# Number of session (Default is "ses-pre")
if [ -z "${SES}" ]; then SES="SINGLE"; else SES="ses-${SES/ses-/}"; fi

# Exit if subject is not found
if [ ! -d "${out}/sub-${id}" ]; then Error "$id was not found on the OUTPUT directory\n\t Check ls ${out}/sub-${id}"; exit 1; fi

# Assigns variables names
bids_variables "$BIDS" "$id" "$out" "$SES"

# if temporary directory is running on MICA-lab SGE
if [ "$mica" = "TRUE" ];then source "$MICAPIPE"/functions/init.sh; fi

# if temporary directory is empty
if [ -z "$tmp" ]; then tmp=/tmp; fi

# Optional arguments SC
if [ -z "$tracts" ]; then tracts=40M; else tracts="$tracts"; fi

# ---------------------------------------------------------------------------------------
Title "MICA pipe cleanup
\tSubject: $id
\tSession: $SES"
# ---------------------------------------------------------------------------------------
# CLEAN -proc_structural
if [ "$procVOL" = "TRUE" ]; then
    Warning "Erasing proc_structural output files and logs\n IF you re-run this step we highly recomend to re-run all post steps"
    Do_cmd rm -rf "$proc_struct"/first \
                  "$proc_struct"/*_space-nativepro_t1w* \
                  "$dir_warp"/*-nativepro_brain_to-MNI152_* \
                  "$dir_warp"/*_transformations-proc_structural.json \
                  "$dir_logs"/proc_structural_* \
                  "$dir_QC"/*module-proc_structural.json \
                  "$dir_volum"/*t1w_atlas-cerebellum.nii.gz \
                  "$dir_volum"/*t1w_atlas-subcortical.nii.gz
    grep -v "${id}, ${SES/ses-/}, proc_structural" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi
# ---------------------------------------------------------------------------------------
# CLEAN -proc_freesurfer
if [ "$procFS" = "TRUE" ]; then
    Warning "Erasing proc_freesurfer output files and logs\n IF you re-run this step we highly recomend to re-run all post steps"
    Do_cmd rm -rf "$dir_subjsurf" \
                  "$dir_logs"/proc_freesurfer*
    grep -v "${id}, ${SES/ses-/}, proc_freesurfer" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

# ---------------------------------------------------------------------------------------
# CLEAN -post_structural
if [ "$postVOL" = "TRUE" ]; then
    Warning "Erasing post_structural output files and logs"
    Do_cmd rm -rf "$dir_volum"/* \
                  "$proc_struct"/"$idBIDS"_space-fsnative_t1w.nii.gz \
                  "${dir_warp}/${idBIDS}"_from-fsnative_to_nativepro_t1w_* \
                  "${dir_conte69}"/* \
                  "${dir_subjsurf}"/label/*_mics* \
                  "${dir_subjsurf}"/surf/*.midthickness.surf.gii \
                  "$dir_logs"/post_structural_*
    grep -v "${id}, ${SES/ses-/}, post_structural" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi
# ---------------------------------------------------------------------------------------
# CLEAN -proc_dwi
if [ "$procDWI" = "TRUE" ]; then
    Warning "Erasing proc_dwi output files and logs"
    dwifiles=($(find "${proc_dwi}" -name "*_space-dwi_desc-*" ! -name "*iFOD2*"))
    Do_cmd rm -rf "$proc_dwi"/eddy/* \
                  "${dwifiles[*]}" \
                  "${proc_dwi}/${idBIDS}"_space-dwi_model-* \
                  "${proc_dwi}/${idBIDS}"_space-dwi*_desc-MP-PCA_* \
                  "${proc_dwi}/${idBIDS}"_space-dwi*_desc-deGibbs_* \
                  "${proc_struct}/${idBIDS}"_space-nativepro_desc-dwi.nii.gz \
                  "$dir_warp"/*_space-dwi_from-dwi_to-nativepro_mode-image_desc-* \
                  "$dir_warp"/*space-dwi_from-dwi_to-dwi_mode-image_desc-SyN_* \
                  "$dir_warp"/*_mode-image_desc-rigid_* \
                  "$dir_logs"/proc_dwi_*
    grep -v "${id}, ${SES/ses-/}, proc_dwi" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

# ---------------------------------------------------------------------------------------
# CLEAN -proc_func
if [ "$procfMRI" = "TRUE" ]; then
    Warning "Erasing proc_func output files and logs"
    Do_cmd rm -rf "$proc_func"/* \
                  "$proc_struct"/"$id"_singleecho_nativepro_brain.nii.gz \
                  "$dir_warp"/*_func_from-se* \
                  "$dir_warp"/*_from-se*_to-fsnative_bbr* \
                  "$dir_warp"/*func_space-fsnative* \
                  "$dir_warp"/*from-nativepro_func* \
                  "$proc_struct"/${idBIDS}_space-nativepro_desc-t1wbold.nii.gz \
                  "$dir_logs"/proc_func_*
    grep -v "${id}, ${SES/ses-/}, proc_rsfmri" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
    grep -v "${id}, ${SES/ses-/}, proc_func" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi
# ---------------------------------------------------------------------------------------
# CLEAN -SC TRACTOGRAPHY
if [ "$postDWI" = "TRUE" ]; then
    filter=SIFT2
    Warning "Erasing post_tractography output files and logs"
    Do_cmd rm -rf "$proc_dwi"/connectomes/"$idBIDS"_space-dwi_atlas-*_desc-iFOD2-"$tracts"-"${filter}"_*.txt \
                  "$proc_dwi"/QC/png/"$idBIDS"_space-dwi_atlas-*_desc-iFOD2-"$tracts"-"${filter}"_*connectome.png \
                  "$proc_dwi"/QC/png/"$idBIDS"_space-dwi_atlas-*_desc-iFOD2-"$tracts"-"${filter}"_*edgeLengths.png \
                  "$proc_dwi"/"$idBIDS"_space-dwi_desc-iFOD2-"$tracts"_tdi.mif \
                  "$proc_dwi"/"$idBIDS"_space-dwi_atlas-subcortical.nii.gz \
                  "$proc_dwi"/"$idBIDS"_space-dwi_atlas-cerebellum.nii.gz \
                  "$proc_dwi"/"$idBIDS"_space-dwi_"$tracts"* "$dir_logs"/SC_*
    grep -v "${id}, ${SES/ses-/}, SC" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi
# ---------------------------------------------------------------------------------------
# CLEAN -MPC
if [ "$postMPC" = "TRUE" ]; then
    Warning "Erasing post_mpc output files and logs"
    Do_cmd rm -rf "${subject_dir}/anat/surfaces/micro_profiles/" \
                  "${dir_warp}/${idBIDS}"_from-micro_to-fsnative* \
                  "${subject_dir}/anat/${idBIDS}_space-fsnative_desc-micro.nii.gz" \
                  "$dir_logs"/MPC_* \
                  "${dir_QC_png}"/*desc-qc_MPC*
    grep -v "${id}, ${SES/ses-/}, MPC" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi
# ---------------------------------------------------------------------------------------
# CLEAN -GD
if [ "$postGD" = "TRUE" ]; then
    Warning "Erasing '-GD' output files and logs"
    Do_cmd rm -rf "${subject_dir}/anat/surfaces/geo_dist" \
                  "$dir_logs"/GD_*
    grep -v "${id}, ${SES/ses-/}, GD" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi
# ---------------------------------------------------------------------------------------
# CLEAN -Morphology
if [ "$postMorph" = "TRUE" ]; then
    Warning "ERASING '-Morphology' output files and logs"
    Do_cmd rm -rf "${subject_dir}/anat/surfaces/morphology" \
                  "$dir_logs"/Morphology_*
    grep -v "${id}, ${SES/ses-/}, Morphology" "${out}/micapipe_processed_sub.csv" > ${tmp}/tmpfile && mv ${tmp}/tmpfile "${out}/micapipe_processed_sub.csv"
fi

bids_variables_unset
